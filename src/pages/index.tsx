import { type NextPage } from "next";
import axios from "axios";
import Head from "next/head";
import type { FormEventHandler } from "react";

type Game = { appid: string };
type GameResponse = { response: { games: Game[] } };

const Home: NextPage = () => {
  const handleSubmit: FormEventHandler = (e) => {
    e.preventDefault();

    // eslint-disable-next-line
    const [steamId] = Object.values(e.target).map((e) => e.value) as string[];
    getGames(steamId);
  };

  const getGames = async (steamId: string | undefined) => {
    const steamResponse = await axios.get<GameResponse>(
      `/api/services/steam?id=${steamId}`
    );

    // parsing
    const steamParsed = steamResponse.data.response.games.map(
      (game: Game) => game.appid
    );

    return steamParsed;
  };

  return (
    <>
      <Head>
        <title>Gaming shuffle</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c] text-white">
        <form
          onSubmit={handleSubmit}
          className="flex flex-col items-center gap-2"
        >
          <label>
            <span>Enter your Steam URL (example here)</span>
            <input
              name="steam"
              className="text-black"
              required
              type="text"
              placeholder="Your Steam URL"
            />
          </label>
          <label>
            <span>(Soon) Enter your Origin URL (example here)</span>
            <input
              name="origin"
              className="text-black"
              disabled
              type="text"
              placeholder="Your Origin URL"
            />
          </label>
          <label>
            <span>(Soon) Enter your Epic Games URL (example here)</span>
            <input
              name="epic"
              className="text-black"
              disabled
              type="text"
              placeholder="Your Epic Games URL"
            />
          </label>
          <input
            className="rounded bg-white px-4 py-2 text-black"
            type="submit"
            value="Submit"
          />
        </form>
      </main>
    </>
  );
};

export default Home;

/*
const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
*/
